fill="--- "

beutify_ps1() {
  if [ $? = 0 ]; then
      local last_state="${BCYAN}:)${COFF} "
  else
      local last_state="${BRED}:(${COFF} "
  fi

  # create a $fill of all screen width minus the time string and a space
  prefix_str="$USER@$HOSTNAME"
  let fillsize=${COLUMNS}-${#prefix_str}-10
  fill=""
  while [ "$fillsize" -gt "0" ]
  do
      fill="-${fill}" # fill with underscores to work on
      let fillsize=${fillsize}-1
  done

  # indicator treatment
  if [ $PWD = $HOME ]; then
    local indicator="${BASE0}>${COFF} "
  else
    local indicator=" ${BASE0}~>${COFF} "
  fi

  pwd="${BASE0}\w${COFF}"

  git rev-parse --git-dir &> /dev/null
  local git_status="$(git status 2> /dev/null)"
  local branch_pattern="^# On branch ([^${IFS}]*)"
  local remote_pattern="# Your branch is (.*) of"
  local diverge_pattern="# Your branch and (.*) have diverged"
  if [[ ! ${git_status} =~ "nothing" ]]; then
    state="${BORANGE}*${COFF}"
  else
    unset state
  fi
  if [[ ${git_status} =~ ${remote_pattern} ]]; then
    if [[ ${BASH_REMATCH[1]} == "ahead" ]]; then
      remote="${YELLOW}↑${COFF}"
    else
      remote="${YELLOW}↓${COFF}"
    fi
  fi
  if [[ ${git_status} =~ ${diverge_pattern} ]]; then
    remote="${BRED}↕${COFF}"
  else
    unset remote
  fi
  if [[ ${git_status} =~ ${branch_pattern} ]]; then
    branch=" ${CYAN}${BASH_REMATCH[1]}${COFF}"
    local git_state="${branch}${remote}${state}"
  fi

  PS1="${last_state}${pwd}${git_state}${indicator}"
  OLD_PS1="$PS1"
  export PS1="${debian_chroot:+($debian_chroot)}${BASE00}\u@\h "'$fill \t\n'"${COFF}$OLD_PS1"
  trap 'echo -ne "\e[0m"' DEBUG # this one is invoked every time before a command is executed
}

PROMPT_COMMAND=beutify_ps1
